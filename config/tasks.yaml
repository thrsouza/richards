extract_outline_from_transcription:
  description: >
    üìã EXTRA√á√ÉO E ESTRUTURA√á√ÉO DE OUTLINE T√âCNICO

    Analisar a transcri√ß√£o do v√≠deo fornecida e executar um processo estruturado de extra√ß√£o de conhecimento:

    ETAPA 1 - AN√ÅLISE INICIAL:
    - Ler completamente a transcri√ß√£o para compreender o contexto geral
    - Identificar o tema principal e sub-temas t√©cnicos discutidos
    - Mapear a progress√£o l√≥gica da conversa
    - Detectar momentos de deep-dive t√©cnico vs overview conceitual

    ETAPA 2 - FILTRAGEM E LIMPEZA:
    - Remover ru√≠dos conversacionais (uhm, ah, repeti√ß√µes, interjei√ß√µes)
    - Eliminar tangentes n√£o-t√©cnicas ou irrelevantes
    - Identificar e preservar insights t√©cnicos valiosos mesmo em conversas casuais
    - Detectar corre√ß√µes ou refinamentos feitos durante a conversa

    ETAPA 3 - ESTRUTURA√á√ÉO HIER√ÅRQUICA:
    - Criar outline com t√≠tulos acompanhados de emojis contextuais
    - Estabelecer hierarquia clara: conceitos principais (H1) ‚Üí sub-conceitos (H2) ‚Üí detalhes (H3)
    - Marcar t√≥picos que demandam exemplos de c√≥digo
    - Identificar conceitos que precisam de contexto adicional
    - Categorizar por n√≠vel de complexidade (üü¢ B√°sico, üü° Intermedi√°rio, üî¥ Avan√ßado)

    ENTRADA:
    <transcription>
      {transcription}
    </transcription>

  expected_output: >
    Outline t√©cnico estruturado em markdown seguindo este formato obrigat√≥rio:

    # üéØ [T√≠tulo Principal da Documenta√ß√£o]

    ## üìã Resumo Executivo
    [Resumo de 2-3 linhas do conte√∫do t√©cnico]

    ## üèóÔ∏è Estrutura do Conte√∫do

    ### üîß [T√≥pico Principal 1] (üü¢/üü°/üî¥)
    - [Subt√≥pico 1.1]
    - [Subt√≥pico 1.2] *(necessita exemplo de c√≥digo)*

    ### ‚öôÔ∏è [T√≥pico Principal 2] (üü¢/üü°/üî¥)
    - [Subt√≥pico 2.1] *(contexto adicional necess√°rio)*
    - [Subt√≥pico 2.2]

    ## üí° Insights Identificados
    - [Lista de insights t√©cnicos extra√≠dos]

    ## üîç Gaps de Informa√ß√£o
    - [Pontos que precisam ser expandidos pelo pr√≥ximo agente]

  agent: technical_content_analyst


expand_and_validate_technical_details:
  description: >
    üèóÔ∏è EXPANS√ÉO E VALIDA√á√ÉO ARQUITETURAL PROFUNDA

    Transformar o outline estruturado em documenta√ß√£o t√©cnica robusta atrav√©s de processo sistem√°tico de enriquecimento:

    FASE 1 - VALIDA√á√ÉO DO OUTLINE:
    - Revisar a estrutura proposta contra a transcri√ß√£o original
    - Identificar lacunas t√©cnicas ou imprecis√µes conceituais
    - Validar a hierarquia e categoriza√ß√£o de complexidade
    - Detectar oportunidades de melhoria na organiza√ß√£o

    FASE 2 - EXPANS√ÉO T√âCNICA DETALHADA:
    Para cada t√≥pico do outline, desenvolver:
    - **Contexto Arquitetural**: Por que esta solu√ß√£o? Qual problema resolve?
    - **Implementa√ß√£o T√©cnica**: Como funciona internamente?
    - **Exemplos de C√≥digo**: Snippets pr√°ticos e funcionais com explica√ß√µes linha por linha
    - **Trade-offs**: Pr√≥s, contras, limita√ß√µes e alternativas
    - **Decis√µes de Design**: Justificativas arquiteturais baseadas em requisitos
    - **Padr√µes Aplicados**: Design patterns, architectural patterns utilizados
    - **Performance e Escalabilidade**: Considera√ß√µes de throughput, lat√™ncia, recursos
    - **Evolu√ß√£o Hist√≥rica**: Como chegamos a esta solu√ß√£o (se aplic√°vel)

    FASE 3 - ENRIQUECIMENTO CONTEXTUAL:
    - Adicionar refer√™ncias a documenta√ß√£o oficial, RFCs, papers relevantes
    - Incluir m√©tricas, benchmarks ou dados de performance quando pertinente
    - Conectar conceitos com o ecossistema tecnol√≥gico maior
    - Identificar anti-padr√µes e armadilhas comuns

    FASE 4 - REFINAMENTO DE CONTE√öDO:
    - Eliminar inconsist√™ncias e redund√¢ncias da transcri√ß√£o original
    - Corrigir erros conceituais ou imprecis√µes t√©cnicas
    - Reorganizar informa√ß√£o para fluxo l√≥gico otimizado
    - Garantir precis√£o terminol√≥gica e t√©cnica

    ENTRADA PRIM√ÅRIA:
    <transcription>
      {transcription}
    </transcription>

  expected_output: >
    Documenta√ß√£o t√©cnica expandida seguindo estrutura rigorosa:

    # üéØ [T√≠tulo com Foco na Solu√ß√£o/Conceito Principal]

    ## üìã Overview Executivo
    [Resumo t√©cnico de 3-4 linhas com context, solution, impact]

    ## üé™ Contexto e Motiva√ß√£o
    [Por que este t√≥pico √© importante? Qual problema resolve?]

    ## üèóÔ∏è [Se√ß√£o Principal 1] (üü¢/üü°/üî¥)

    ### üí° Conceito Fundamental
    [Explica√ß√£o conceitual clara antes de mergulhar em detalhes]

    ### üîß Implementa√ß√£o T√©cnica
    [Como funciona na pr√°tica]

    ```[linguagem]
    // Exemplo de c√≥digo com coment√°rios explicativos
    [c√≥digo funcionais e pr√°ticos]
    ```

    ### ‚öñÔ∏è Trade-offs e Considera√ß√µes
    **Pr√≥s:**
    - [Lista de vantagens]

    **Contras:**
    - [Lista de limita√ß√µes]

    **Quando usar:**
    - [Cen√°rios apropriados]

    ### üîç Detalhes Arquiteturais
    [Deep dive em decis√µes de design, padr√µes aplicados]

    ## üìä Performance e Escalabilidade
    [M√©tricas, benchmarks, considera√ß√µes de escala quando aplic√°vel]

    ## üö® Armadilhas Comuns
    [Anti-padr√µes e erros frequentes a evitar]

    ## üîó Refer√™ncias e Recursos
    [Links para documenta√ß√£o oficial, papers, tools]

    ## üöÄ Pr√≥ximos Passos
    [O que aprender/explorar em seguida]

  agent: senior_software_architect


refine_for_clarity_and_structure:
  description: >
    ‚úçÔ∏è REFINAMENTO EDITORIAL E ESTRUTURAL PARA DEVELOPER EXPERIENCE

    Transformar a documenta√ß√£o t√©cnica expandida em material publication-ready atrav√©s de processo editorial rigoroso:

    ETAPA 1 - AN√ÅLISE ESTRUTURAL:
    - Avaliar fluxo narrativo e progress√£o l√≥gica
    - Identificar gaps na progress√£o do conhecimento
    - Verificar consist√™ncia na aplica√ß√£o de padr√µes visuais
    - Analisar cognitive load e pontos de poss√≠vel sobrecarga

    ETAPA 2 - APLICA√á√ÉO DE PADR√ïES OBRIGAT√ìRIOS:

    **ESTRUTURA VISUAL MANDAT√ìRIA:**
    - ‚úÖ T√≠tulos e subt√≠tulos com emojis contextuais e consistentes
    - ‚úÖ Introdu√ß√£o com problema/contexto antes de solu√ß√µes
    - ‚úÖ Progress√£o conceitual ‚Üí implementa√ß√£o ‚Üí exemplos ‚Üí aplica√ß√£o
    - ‚úÖ Code blocks sempre precedidos de contexto explicativo
    - ‚úÖ Se√ß√µes padronizadas: "üí° Pontos-chave", "‚ö†Ô∏è Armadilhas", "üöÄ Pr√≥ximos Passos"

    **CALL-OUTS VISUAIS OBRIGAT√ìRIOS:**
    - üí° **Dica:** Insights valiosos e best practices
    - ‚ö†Ô∏è **Aten√ß√£o:** Avisos sobre armadilhas e limita√ß√µes
    - üîç **Aprofundamento:** Links para recursos avan√ßados
    - üìù **Exemplo:** Casos pr√°ticos e aplica√ß√µes reais
    - üéØ **Resumo:** Consolida√ß√£o de conceitos-chave

    ETAPA 3 - OTIMIZA√á√ÉO DE LINGUAGEM:
    - Converter jarg√£o t√©cnico em linguagem acess√≠vel (mas precisa)
    - Implementar storytelling t√©cnico com analogias eficazes
    - Garantir tom conversacional mas profissional
    - Eliminar ambiguidades e termos vagos
    - Padronizar terminologia ao longo do documento

    ETAPA 4 - OTIMIZA√á√ÉO PEDAG√ìGICA:
    - Quebrar informa√ß√£o complexa em chunks digest√≠veis
    - Adicionar contexto suficiente para cada conceito
    - Garantir que c√≥digo tenha prop√≥sito claro e coment√°rios √∫teis
    - Implementar t√©cnicas de cognitive load reduction
    - Validar que progress√£o atende diferentes learning styles

    ETAPA 5 - EXPERI√äNCIA DE LEITURA:
    - Otimizar para skimming (headers, bullet points, highlights)
    - Garantir que deep-diving seja recompensador
    - Facilitar copy-paste de c√≥digo com contexto preservado
    - Adicionar navega√ß√£o interna e refer√™ncias cruzadas

  expected_output: >
    Documenta√ß√£o refinada e publication-ready seguindo template rigoroso:

    # üéØ [T√≠tulo Claro e Descritivo]

    > üìñ **Tempo de leitura:** ~X minutos | **N√≠vel:** üü¢ B√°sico / üü° Intermedi√°rio / üî¥ Avan√ßado

    ## üìã TL;DR
    [Resumo executivo em 2-3 bullet points para readers com pressa]

    ## üé™ Contexto e Problema
    [Setup do problema de forma envolvente, contextualizando a necessidade]

    ## üèóÔ∏è [Se√ß√£o Principal]

    ### üí° Conceito Central
    [Explica√ß√£o conceitual clara com analogias quando √∫til]

    ### üîß Como Implementar
    [Passos pr√°ticos e implementa√ß√£o]

    ```javascript
    // Contexto: Este exemplo demonstra [prop√≥sito espec√≠fico]
    function exemploClaro() {
        // Coment√°rio explicativo √∫til
        return "c√≥digo funcional com contexto";
    }
    ```

    üí° **Dica:** [Insight valioso relacionado ao c√≥digo acima]

    ### ‚öñÔ∏è Quando Usar vs N√£o Usar

    **‚úÖ Use quando:**
    - Cen√°rio espec√≠fico A
    - Requisito espec√≠fico B

    **‚ùå Evite quando:**
    - Limita√ß√£o espec√≠fica C
    - Anti-pattern espec√≠fico D

    ## üí° Pontos-chave
    - [Takeaway principal 1]
    - [Takeaway principal 2]
    - [Takeaway principal 3]

    ## ‚ö†Ô∏è Armadilhas Comuns
    - [Erro comum 1 e como evitar]
    - [Erro comum 2 e como evitar]

    ## üîó Recursos Adicionais
    - [Link 1 com descri√ß√£o clara do que encontrar]
    - [Link 2 com contexto de quando usar]

    ## üöÄ Pr√≥ximos Passos
    [Sugest√µes claras de como expandir o conhecimento ou aplicar na pr√°tica]

  agent: technical_writer


perform_peer_review_and_feedback:
  description: >
    üîç PEER REVIEW ABRANGENTE E VALIDA√á√ÉO MULTI-DIMENSIONAL
    
    Executar processo rigoroso de revis√£o atrav√©s de m√∫ltiplas perspectivas cr√≠ticas para garantir excel√™ncia final:
    
    DIMENS√ÉO 1 - VALIDA√á√ÉO T√âCNICA PROFUNDA:
    
    **Accuracy Assessment:**
    - Verificar precis√£o de todos os conceitos t√©cnicos apresentados
    - Validar viabilidade e funcionalidade de todos os exemplos de c√≥digo
    - Confirmar alinhamento com best practices atuais da ind√∫stria
    - Identificar potential security concerns ou anti-patterns
    - Checar refer√™ncias e links para recursos externos
    
    **Completude T√©cnica:**
    - Avaliar se informa√ß√µes cr√≠ticas est√£o missing
    - Verificar se edge cases importantes foram considerados
    - Validar se contexto arquitetural √© suficiente
    - Confirmar que trade-offs est√£o adequadamente representados
    
    DIMENS√ÉO 2 - VALIDA√á√ÉO PEDAG√ìGICA E UX:
    
    **Clarity Assessment:**
    - Testar compreensibilidade para diferentes n√≠veis t√©cnicos
    - Identificar pontos de poss√≠vel confus√£o ou ambiguidade
    - Validar efic√°cia das analogias e explica√ß√µes conceituais
    - Verificar se progress√£o de conhecimento √© l√≥gica e incremental
    
    **Learning Experience:**
    - Avaliar se exemplos s√£o motivadores e pr√°ticos
    - Verificar se "aha moments" est√£o bem posicionados
    - Confirmar que cognitive load est√° bem distribu√≠do
    - Validar se call-to-actions s√£o inspiradores e acion√°veis
    
    DIMENS√ÉO 3 - VALIDA√á√ÉO ESTRUTURAL E CONSIST√äNCIA:
    
    **Pattern Compliance:**
    - Verificar aplica√ß√£o consistente de emojis e formata√ß√£o
    - Validar adher√™ncia aos templates estabelecidos
    - Confirmar qualidade e relev√¢ncia dos call-outs visuais
    - Checar hierarquia de headers e navegabilidade
    
    **Publication Readiness:**
    - Avaliar spelling, grammar e flu√™ncia da linguagem
    - Verificar links funcionais e refer√™ncias precisas
    - Confirmar que metadados est√£o completos
    - Validar otimiza√ß√£o para diferentes modos de consumo (skimming vs deep-dive)
    
    DIMENS√ÉO 4 - FEEDBACK E REFINAMENTO:
    - Identificar oportunidades espec√≠ficas de melhoria
    - Sugerir adi√ß√µes que aumentariam valor para o leitor
    - Propor simplifica√ß√µes onde complexity n√£o agrega valor
    - Recomendar ajustes para melhor developer experience

  expected_output: >
    Documenta√ß√£o final revisada e validada, incluindo relat√≥rio de revis√£o:

    [DOCUMENTA√á√ÉO REFINADA COM TODAS AS CORRE√á√ïES APLICADAS]
    
    ---
    
    ## üìä RELAT√ìRIO DE PEER REVIEW
    
    ### ‚úÖ Valida√ß√µes Confirmadas
    - **Precis√£o T√©cnica:** [Status e observa√ß√µes]
    - **Completude:** [Status e observa√ß√µes]
    - **Clareza Pedag√≥gica:** [Status e observa√ß√µes]
    - **Consist√™ncia Estrutural:** [Status e observa√ß√µes]
    
    ### üéØ Principais Melhorias Implementadas
    1. [Melhoria espec√≠fica 1]
    2. [Melhoria espec√≠fica 2]
    3. [Melhoria espec√≠fica 3]
    
    ### üí° Pontos Fortes Identificados
    - [Aspecto particularmente bem executado 1]
    - [Aspecto particularmente bem executado 2]
    
    ### üéØ P√∫blico-Alvo Validado
    **Ideal para:** [Descri√ß√£o do p√∫blico que mais se beneficiar√°]
    **Pr√©-requisitos:** [Conhecimentos necess√°rios para aproveitamento m√°ximo]
    **Valor Agregado:** [Principal takeaway e aplica√ß√£o pr√°tica]
    
    ### üìà Score de Qualidade
    - **T√©cnica:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
    - **Pedag√≥gica:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê  
    - **Estrutural:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
    - **Overall:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê

  agent: peer_reviewer


publish_and_distribute_documentation:
  description: >
    üìö PUBLICA√á√ÉO E DISTRIBUI√á√ÉO FINAL DA DOCUMENTA√á√ÉO
    
    Executar processo final de publica√ß√£o, garantindo m√°xima qualidade e experi√™ncia do usu√°rio na documenta√ß√£o entregue:
    
    FASE 1 - PREPARA√á√ÉO PARA PUBLICA√á√ÉO:
    
    **Formatting Final:**
    - Aplicar markdown limpo e bem estruturado sem inconsist√™ncias
    - Garantir hierarquia de headers totalmente consistente (H1 > H2 > H3)
    - Verificar syntax highlighting correto em todos os code blocks
    - Confirmar aplica√ß√£o uniforme e contextual de emojis
    - Validar links internos e externos funcionais
    
    **Metadados e Organiza√ß√£o:**
    - Adicionar t√≠tulo principal claro e SEO-friendly
    - Incluir abstract/sum√°rio executivo quando apropriado
    - Estabelecer tags de categoriza√ß√£o t√©cnica
    - Calcular e incluir estimativa de tempo de leitura
    - Indicar claramente n√≠vel de dificuldade (üü¢üü°üî¥)
    - Adicionar data de cria√ß√£o e versioning information
    
    FASE 2 - CONTROLE DE QUALIDADE FINAL:
    
    **Technical Validation:**
    - Executar spell-check e grammar validation completos
    - Testar funcionamento de todos os code examples
    - Verificar accuracy de todas as refer√™ncias t√©cnicas
    - Confirmar links externos ativos e relevantes
    - Validar sintaxe markdown em diferentes renderers
    
    **User Experience Optimization:**
    - Otimizar para diferentes modos de consumo (mobile, desktop)
    - Garantir experi√™ncia fluida tanto para skimming quanto deep-reading
    - Facilitar copy-paste de c√≥digo mantendo contexto
    - Adicionar navigation aids (table of contents se necess√°rio)
    - Implementar call-to-actions inspiradores e acion√°veis
    
    FASE 3 - PUBLICA√á√ÉO ESTRUTURADA:
    
    **Distribution Preparation:**
    - Formatar para plataforma de destino (Markdown padr√£o)
    - Garantir compatibilidade com sistemas de versionamento
    - Preparar documenta√ß√£o para f√°cil discovery e indexing
    - Adicionar metadata para tracking e analytics
    - Incluir canais de feedback e contribution guidelines
    
    **Final Polish:**
    - Revis√£o final de consist√™ncia visual e estrutural
    - Verifica√ß√£o de compliance com todos os padr√µes estabelecidos
    - Valida√ß√£o de que developer experience √© otimizada
    - Confirma√ß√£o de que documenta√ß√£o est√° truly publication-ready

  expected_output: >
    Documenta√ß√£o final publication-ready com formata√ß√£o perfeita:

    # üéØ [T√≠tulo Principal Otimizado]
    
    > üìñ **Tempo de leitura:** ~X minutos | **N√≠vel:** üü¢ B√°sico / üü° Intermedi√°rio / üî¥ Avan√ßado  
    > üè∑Ô∏è **Tags:** [tag1, tag2, tag3] | **Vers√£o:** 1.0 | **Atualizado:** [data]
    
    ## üìã TL;DR
    [Resumo executivo ultra-conciso em 2-3 bullet points]
    
    ## üé™ Contexto e Problema
    [Introdu√ß√£o envolvente que contextualiza a necessidade]
    
    [CONTE√öDO PRINCIPAL COMPLETAMENTE FORMATADO E POLIDO]
    
    ---
    
    ## üìä Metadados da Documenta√ß√£o
    
    **Informa√ß√µes T√©cnicas:**
    - **Complexidade:** [N√≠vel detalhado]
    - **Pr√©-requisitos:** [Lista espec√≠fica]
    - **Tecnologias:** [Stack relevante]
    - **Casos de Uso:** [Scenarios prim√°rios]
    
    **Qualidade Assegurada:**
    - ‚úÖ Code examples testados e funcionais
    - ‚úÖ Links verificados e atuais
    - ‚úÖ Spelling e grammar validados
    - ‚úÖ Formata√ß√£o markdown otimizada
    - ‚úÖ SEO e discoverability otimizados
    
    **Suporte e Feedback:**
    - üí¨ **Feedback:** [canal para feedback]
    - ü§ù **Contribui√ß√µes:** [processo de contribui√ß√£o]
    - üìÖ **Pr√≥xima revis√£o:** [timeline de updates]

  output_file: >
    {output_path}/{output_filename}

  agent: documentation_publisher
